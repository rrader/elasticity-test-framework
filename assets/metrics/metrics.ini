[metrics.sh]
INTERVAL=1
;DEFAULT_REPORTER=stdout
DEFAULT_METRICS=cpu,memory,swap,network_io,disk_io,disk_usage
;CUSTOM_REPORTERS_PATH=./reporters/custom
;CUSTOM_METRICS_PATH=./metrics/custom

[metric cpu]
;CPU load percentage.

[metric disk_io]
;Disk I/O in MB/s.
;DISK_IO_MOUNTPOINT=/dev/vda

[metric disk_usage]
;Disk usage percentage for a file system at a given mount point.
;DISK_USAGE_MOUNTPOINT=/dev/vda

;[metric heartbeat]
;Send a simple heartbeat in form of an integer '1'.

[metric memory]
;Percentage of used memory.

[metric network_io]
;Network traffic in kB/s.
NETWORK_IO_INTERFACE=eth0

;[metric ping]
;Check if remote host is reachable by sending a single ping.
;Reports '1' if ping was successful, '0' if not.
;PING_REMOTE_HOST=

[metric swap]
;Percentage of used swap space.

[metric fd]
;Number of allocated file descriptors.

[metric tcp_backlog]
;TCP Backlog

[metric cs]
;Context switches

;[reporter file]
;Write to a file or named pipe.
;FILE_LOCATION=

;[reporter influxdb]
;Send data to InfluxDB.
;INFLUXDB_API_ENDPOINT=
;INFLUXDB_SEND_HOSTNAME=true

;[reporter keen_io]
;Send data to Keen IO (https://keen.io).
;KEEN_IO_WRITE_KEY=
;KEEN_IO_PROJECT_ID=
;KEEN_IO_EVENT_COLLECTION=PhD-1-Michael-Hall

;[reporter logentries_com]
;Send data to Logentries.com using token TCP (https://docs.logentries.com/docs/input-token)
;LOGENTRIES_TOKEN=

;[reporter prometheus]
;Provide HTTP endpoint for Prometheus (http://prometheus.io).
;Exposes metrics of type gauges in the following format:
;metrics_sh{metric="<metric>"} <value> <timestamp>
;PROMETHEUS_PORT=9100
;PROMETHEUS_METRIC_NAME=metrics_sh

;[reporter stathat]
;Send data to StatHat (https://www.stathat.com).
;STATHAT_API_KEY=

;[reporter statsd]
;Send data to StatsD using the gauges metric type.
;STATSD_HOST=127.0.0.1
;STATSD_PORT=8125
;STATSD_PREFIX=

;[reporter stdout]
;Print to standard output, e.g. the TTY you're running the script in.

;[reporter udp]
;Send data to any service using UDP.
;UDP_HOST=127.0.0.1
;UDP_PORT=
;UDP_PREFIX=
;UDP_DELIMITER="="
